-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.api_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  endpoint text NOT NULL,
  method text NOT NULL,
  request_body jsonb,
  response_status integer,
  response_time_ms integer,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT api_logs_pkey PRIMARY KEY (id),
  CONSTRAINT api_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.blog_posts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  slug text NOT NULL UNIQUE,
  excerpt text,
  content text NOT NULL,
  author_id uuid,
  status text DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'published'::text, 'archived'::text])),
  featured_image_url text,
  meta_title text,
  meta_description text,
  tags ARRAY,
  language text DEFAULT 'en'::text,
  view_count integer DEFAULT 0,
  published_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT blog_posts_pkey PRIMARY KEY (id),
  CONSTRAINT blog_posts_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  display_name text NOT NULL,
  icon text,
  color_gradient text,
  description text,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.credit_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  transaction_type text NOT NULL CHECK (transaction_type = ANY (ARRAY['purchase'::text, 'usage'::text, 'refund'::text, 'bonus'::text])),
  amount integer NOT NULL,
  description text,
  video_id uuid,
  subscription_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT fk_credit_transactions_video FOREIGN KEY (video_id) REFERENCES public.videos(id),
  CONSTRAINT credit_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT credit_transactions_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id)
);
CREATE TABLE public.faqs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  question text NOT NULL,
  answer text NOT NULL,
  category text,
  language text DEFAULT 'en'::text,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT faqs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  product_id text NOT NULL,
  product_name text NOT NULL,
  price integer NOT NULL,
  credits integer NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['once'::text, 'subscription'::text])),
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'cancelled'::text, 'refunded'::text])),
  checkout_id text UNIQUE,
  payment_method text DEFAULT 'mock'::text,
  created_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  original_price integer,
  videos integer,
  price_per_video numeric,
  price_per_credit numeric,
  duration text,
  resolution text,
  commercial boolean DEFAULT false,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.plan_features (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_id uuid,
  feature_name text NOT NULL,
  feature_type text DEFAULT 'included'::text CHECK (feature_type = ANY (ARRAY['included'::text, 'excluded'::text, 'highlighted'::text])),
  icon text,
  description text,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT plan_features_pkey PRIMARY KEY (id),
  CONSTRAINT plan_features_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.pricing_plans(id)
);
CREATE TABLE public.pricing_plans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_type text NOT NULL UNIQUE CHECK (plan_type = ANY (ARRAY['trial'::text, 'basic'::text, 'pro'::text])),
  name text NOT NULL,
  display_name text NOT NULL,
  current_price numeric NOT NULL,
  original_price numeric,
  currency text DEFAULT 'USD'::text,
  billing_cycle text DEFAULT 'monthly'::text CHECK (billing_cycle = ANY (ARRAY['one_time'::text, 'monthly'::text, 'yearly'::text])),
  credits_included integer NOT NULL,
  video_limit integer NOT NULL,
  max_duration_seconds integer DEFAULT 8,
  max_resolution text DEFAULT '720p'::text,
  commercial_usage boolean DEFAULT false,
  features jsonb NOT NULL DEFAULT '[]'::jsonb,
  feature_highlights jsonb DEFAULT '[]'::jsonb,
  button_text text,
  button_color text,
  is_popular boolean DEFAULT false,
  show_price_increase_warning boolean DEFAULT false,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT pricing_plans_pkey PRIMARY KEY (id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id text NOT NULL UNIQUE,
  product_name text NOT NULL,
  price integer NOT NULL,
  original_price integer,
  credits integer NOT NULL,
  videos integer,
  price_per_video numeric,
  price_per_credit numeric,
  duration text,
  resolution text,
  commercial boolean DEFAULT false,
  type text NOT NULL CHECK (type = ANY (ARRAY['once'::text, 'subscription'::text])),
  price_increase boolean DEFAULT false,
  description text,
  features jsonb,
  billing_period text CHECK (billing_period = ANY (ARRAY['monthly'::text, 'yearly'::text])),
  button_text text,
  button_color text,
  popular boolean DEFAULT false,
  active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT products_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  username text UNIQUE,
  full_name text,
  avatar_url text,
  plan_type text DEFAULT 'free'::text CHECK (plan_type = ANY (ARRAY['free'::text, 'trial'::text, 'basic'::text, 'pro'::text])),
  credits_remaining integer DEFAULT 20,
  total_credits_spent integer DEFAULT 0,
  total_videos_created integer DEFAULT 0,
  is_verified boolean DEFAULT false,
  language_preference text DEFAULT 'en'::text,
  timezone text DEFAULT 'UTC'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.subscription_usage (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  subscription_id uuid,
  billing_period_start timestamp with time zone NOT NULL,
  billing_period_end timestamp with time zone NOT NULL,
  credits_allocated integer NOT NULL,
  credits_used integer DEFAULT 0,
  videos_created integer DEFAULT 0,
  overage_credits integer DEFAULT 0,
  overage_cost numeric DEFAULT 0.00,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscription_usage_pkey PRIMARY KEY (id),
  CONSTRAINT subscription_usage_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT subscription_usage_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  stripe_subscription_id text UNIQUE,
  stripe_customer_id text,
  plan_type text NOT NULL CHECK (plan_type = ANY (ARRAY['trial'::text, 'basic'::text, 'pro'::text])),
  status text NOT NULL CHECK (status = ANY (ARRAY['active'::text, 'canceled'::text, 'past_due'::text, 'unpaid'::text])),
  current_period_start timestamp with time zone,
  current_period_end timestamp with time zone,
  cancel_at_period_end boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.system_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  setting_key text NOT NULL UNIQUE,
  setting_value text,
  setting_type text DEFAULT 'string'::text CHECK (setting_type = ANY (ARRAY['string'::text, 'number'::text, 'boolean'::text, 'json'::text])),
  description text,
  is_public boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT system_settings_pkey PRIMARY KEY (id)
);
CREATE TABLE public.triggers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  display_name text NOT NULL,
  icon text NOT NULL,
  color_gradient text,
  description text,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT triggers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL,
  email text,
  full_name text,
  avatar_url text,
  plan_type text DEFAULT 'free'::text CHECK (plan_type = ANY (ARRAY['free'::text, 'basic'::text, 'pro'::text])),
  credits integer DEFAULT 20,
  total_credits_spent integer DEFAULT 0,
  total_videos_created integer DEFAULT 0,
  is_verified boolean DEFAULT false,
  language_preference text DEFAULT 'en'::text,
  timezone text DEFAULT 'UTC'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  resolution text DEFAULT '720p'::text,
  max_duration text DEFAULT '8s'::text,
  commercial_rights boolean DEFAULT false,
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  session_token text NOT NULL UNIQUE,
  ip_address inet,
  user_agent text,
  expires_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT user_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.video_likes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  video_id uuid,
  user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT video_likes_pkey PRIMARY KEY (id),
  CONSTRAINT video_likes_video_id_fkey FOREIGN KEY (video_id) REFERENCES public.videos(id),
  CONSTRAINT video_likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.video_shares (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  video_id uuid,
  user_id uuid,
  share_platform text CHECK (share_platform = ANY (ARRAY['twitter'::text, 'facebook'::text, 'instagram'::text, 'youtube'::text, 'tiktok'::text, 'other'::text])),
  share_url text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT video_shares_pkey PRIMARY KEY (id),
  CONSTRAINT video_shares_video_id_fkey FOREIGN KEY (video_id) REFERENCES public.videos(id),
  CONSTRAINT video_shares_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.video_views (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  video_id uuid,
  user_id uuid,
  ip_address inet,
  user_agent text,
  view_duration integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT video_views_pkey PRIMARY KEY (id),
  CONSTRAINT video_views_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT video_views_video_id_fkey FOREIGN KEY (video_id) REFERENCES public.videos(id)
);
CREATE TABLE public.videos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  title text NOT NULL,
  description text,
  prompt text NOT NULL,
  triggers ARRAY NOT NULL,
  category text NOT NULL CHECK (category = ANY (ARRAY['Cutting'::text, 'Water'::text, 'Whisper'::text, 'Object'::text, 'Ice'::text, 'Sponge'::text, 'Soap'::text, 'Honey'::text, 'Petals'::text, 'Pages'::text])),
  status text DEFAULT 'processing'::text CHECK (status = ANY (ARRAY['processing'::text, 'ready'::text, 'failed'::text])),
  credit_cost integer NOT NULL,
  duration text,
  resolution text DEFAULT '1080p'::text,
  thumbnail_url text,
  preview_url text,
  download_url text,
  file_size bigint,
  views_count integer DEFAULT 0,
  likes_count integer DEFAULT 0,
  shares_count integer DEFAULT 0,
  is_public boolean DEFAULT true,
  is_featured boolean DEFAULT false,
  generation_started_at timestamp with time zone,
  generation_completed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT videos_pkey PRIMARY KEY (id),
  CONSTRAINT videos_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);